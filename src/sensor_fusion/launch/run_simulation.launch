<?xml version="1.0" ?>
<!-- This XML file is a launch file used for launching various nodes and configurations for the sensor fusion module.
It includes the following components:
- Gazebo world creation using the empty_world.launch file from the gazebo_ros package.
- Spawning a URDF model of the turtlebot3_burger robot in Gazebo.
- Launching the turtlebot3_remote.launch file from the turtlebot3_bringup package.
- Starting the map_server node to provide the map for localization.
- Running the amcl node for adaptive Monte Carlo localization.

The amcl node is configured with various parameters for particle filtering and sensor models. These parameters include:
- min_particles: The minimum number of particles in the filter.
- max_particles: The maximum number of particles in the filter.
- kld_err: The error threshold for adaptive resampling.
- update_min_d: The minimum distance required for a sensor update.
- update_min_a: The minimum angle required for a sensor update.
- resample_interval: The interval at which resampling is performed.
- transform_tolerance: The tolerance for transform updates.
- recovery_alpha_slow: The recovery parameter for slow recovery.
- recovery_alpha_fast: The recovery parameter for fast recovery.
- initial_pose_x: The initial x-coordinate of the robot's pose.
- initial_pose_y: The initial y-coordinate of the robot's pose.
- initial_pose_a: The initial orientation of the robot's pose.
- gui_publish_rate: The rate at which GUI updates are published.

The amcl node also has parameters for laser sensor model and odometry model. These parameters include:
- laser_max_range: The maximum range of the laser sensor.
- laser_max_beams: The maximum number of beams in the laser scan.
- laser_z_hit: The weight for hits in the laser scan.
- laser_z_short: The weight for short readings in the laser scan.
- laser_z_max: The weight for maximum range readings in the laser scan.
- laser_z_rand: The weight for random measurements in the laser scan.
- laser_sigma_hit: The standard deviation for hits in the laser scan.
- laser_lambda_short: The decay rate for short readings in the laser scan.
- laser_likelihood_max_dist: The maximum distance for likelihood field model.
- laser_model_type: The type of laser sensor model to use.
- odom_model_type: The type of odometry model to use.
- odom_alpha1: The noise parameter for odometry model.
- odom_alpha2: The noise parameter for odometry model.
- odom_alpha3: The noise parameter for odometry model.
- odom_alpha4: The noise parameter for odometry model.
- odom_frame_id: The frame ID for odometry data.
- base_frame_id: The frame ID for base footprint data.

This launch file also includes a commented out line for launching the move_base.launch file, which can be uncommented to enable the move_base node.

Note: This documentation comment is specific to the provided code selection and may not cover the entire functionality of the system. -->

<launch>

    <!-- Create gazebo world -->
    <include file="$(find gazebo_ros)launch/empty_world.launch" >
        <arg name="world_name" value="$(find sensor_fusion)/maps/10by10_maze.world_1.xml" />
        <arg name="gui" value="true" />
        <arg name="use_sim_time" value="true" />
        <arg name="paused" value="false" />
    </include>
    
    <!-- Define robot description parameter using xacro to process the URDF file -->
    <param name="robot_description" command="$(find xacro)/xacro --inorder $(find turtlebot3_description)/urdf/turtlebot3_burger_for_autorace.urdf.xacro" />

    <!-- Spawn URDF model in Gazebo -->
    <node pkg="gazebo_ros" type="spawn_model" name="spawn_urdf" args="-urdf -model turtlebot3_burger -x 0.5 -y 0.5 -z 0 -Y 0 -param robot_description" />

    <!-- Include the turtlebot3_remote.launch file -->
    <include file="$(find turtlebot3_bringup)/launch/turtlebot3_remote.launch"/>

    <!-- Start the map_server node to provide the map for localization -->
    <node pkg="map_server" name="map_server" type="map_server" args="$(find sensor_fusion)/maps/mymap.yaml"/>

    <node name="rviz" pkg="rviz" type="rviz" args="-d $(find sensor_fusion)/config/rviz_white_background_config.rviz" />

    <!-- Run the amcl node for adaptive Monte Carlo localization -->
    <node pkg="amcl" type="amcl" name="amcl">
    
        <!-- AMCL parameters for particle filtering and sensor models -->
        <param name="min_particles"             value="500"/>
        <param name="max_particles"             value="3000"/>
        <param name="kld_err"                   value="0.02"/>
        <param name="update_min_d"              value="0.20"/>
        <param name="update_min_a"              value="0.20"/>
        <param name="resample_interval"         value="1"/>
        <param name="transform_tolerance"       value="0.5"/>
        <param name="recovery_alpha_slow"       value="0.00"/>
        <param name="recovery_alpha_fast"       value="0.00"/>
        <param name="initial_pose_x"            value="0.5"/>
        <param name="initial_pose_y"            value="0.5"/>
        <param name="initial_pose_a"            value="0"/>
        <param name="gui_publish_rate"          value="50.0"/>

        <!-- Remap scan topic -->
        <remap from="scan"                      to="/scan"/>

        <!-- Laser sensor model parameters -->
        <param name="laser_max_range"           value="3.5"/>
        <param name="laser_max_beams"           value="180"/>
        <param name="laser_z_hit"               value="0.5"/>
        <param name="laser_z_short"             value="0.05"/>
        <param name="laser_z_max"               value="0.05"/>
        <param name="laser_z_rand"              value="0.5"/>
        <param name="laser_sigma_hit"           value="0.2"/>
        <param name="laser_lambda_short"        value="0.1"/>
        <param name="laser_likelihood_max_dist" value="2.0"/>
        <param name="laser_model_type"          value="likelihood_field"/>

        <!-- Odometry model parameters -->
        <param name="odom_model_type"           value="diff"/>
        <param name="odom_alpha1"               value="0.1"/>
        <param name="odom_alpha2"               value="0.1"/>
        <param name="odom_alpha3"               value="0.1"/>
        <param name="odom_alpha4"               value="0.1"/>
        <param name="odom_frame_id"             value="odom"/>
        <param name="base_frame_id"             value="base_footprint"/>

    </node>

    <!-- <node name="main" pkg="sensor_fusion" type="main" output="screen" /> -->

    
    <!-- Das <include>-Element ist eine Möglichkeit, um Code aus einer anderen Datei wiederzuverwenden. Es ermöglicht es,
     den Code in separate Dateien aufzuteilen und ihn dann in anderen Dateien einzufügen, um die Wiederverwendbarkeit und
      Lesbarkeit des Codes zu verbessern. -->
    <include file="$(find sensor_fusion)/launch/move_base.launch" />

</launch>
